#include <bits/stdc++.h>
using namespace std;

struct TreeNode {
    int val;
    TreeNode *left;
    TreeNode *right;
    TreeNode(int x) : val(x), left(NULL), right(NULL) {}
};
 
TreeNode* temp,*mroot;
void pre(TreeNode* x){
    if(x==NULL){
        temp->left=NULL;
        return;
    }
    if(x!=mroot){
        temp->left=x;
        temp=temp->left;
    }
    pre(x->left);
    pre(x->right);
}
void rec(TreeNode* x){
    if(x==NULL){
        return;
    }
    x->right=x->left;
    x->left=NULL;
    rec(x->right);
}
int main() 
{
    TreeNode* root=new TreeNode(1);
    root->left = new TreeNode(2);
    root->right = new TreeNode(3);
    root->left->left = new TreeNode(4);
    root->left->right = new TreeNode(5);
    root->right->left = new TreeNode(6);
    root->right->right = new TreeNode(7);
    /*
        The above binary tree looks like this:
                    1
                   / \
                   2    3
                  / \  / \
                  4  5 6  7
        when we flaten this tree it should look like:
                    1
                     \
                      2
                       \
                        4
                         \
                          5
                           \
                            3
                             \
                              6
                               \
                                7
    */
    temp=root;
    mroot=root;
    pre(root);
    rec(root);
    while(root!=NULL){
        cout<<root->val<<" ";
        root=root->right;
    }
    return 0;
}
